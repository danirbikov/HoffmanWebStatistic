@model List<Translate>

@{
    string confirmMessage = "Вы уверены, что хотите удалить перевод?";
    string confirmScript = "return confirm('" + confirmMessage + "');";
}
<div class="row">
    <div class="col-xxl-6">
        <div class="card" style="width: 800px;">
            
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="header-title mb-0">Translation list</h4>
                <div class="card-header d-flex justify-content-between align-items-center">
                    <form method="post" asp-action="ParseTranslationFile" enctype="multipart/form-data">
                        <input style="display:none;" id="parseInputFile" type="file" class="btn btn-secondary" onchange="document.getElementById('submitParseFile').click();" accept="application/xml, text/xml" name="file" />
                        <button style="display:none;" type="submit" id="submitParseFile">Загрузить</button>

                        <button type="button" onclick="document.getElementById('parseInputFile').click();" class="btn btn-secondary">Parse translation file</button>
                    </form>
                                       
                    <button onclick="document.getElementById('confirmButton').click();" type="submit" class="btn btn-primary">
                        Save and send stand
                    </button>
                </div>                                                                                    
                </div>

                <div class="card-body pt-0">
                <div class="table-responsive">
                    <table class="table table-centered table-nowrap table-hover mb-0">
                        <thead>
                            <tr>
                                <th scope="col">English variant</th>
                                <th scope="col">Russian variant</th>
                                <th scope="col">Action</th>

                            </tr>
                        </thead>
                        
                            <form method="post" asp-action="SaveChange" id="formId1">
                                
                                    @foreach (var translate in Model)
                                    {                                    
                                        <tr>
                                            <td id="@(translate.EngVariant+"Id")">
                                                <span id="text" name="keys">@translate.EngVariant</span>
                                            </td>
                                            <td id="@(translate.EngVariant+"Id2")">
                                                <span id="text" name="values">@translate.RusVariant</span>
                                            </td>
                                            
                                            <td>
                                            <a onclick="makeEditable('@(translate.EngVariant+"Id")')" class="font-18 text-info me-2" data-bs-toggle="tooltip" data-bs-placement="top" aria-label="Edit" data-bs-original-title="Edit">
                                                    <i class="btn btn-primary">
                                                        Edit
                                                    </i>
                                                </a>
                                                <a onclick="@confirmScript" asp-action="DeleteTranslate" asp-route-translateEngName=@translate.EngVariant class="font-18 text-danger" data-bs-toggle="tooltip" data-bs-placement="top" aria-label="Delete" data-bs-original-title="Delete">
                                                    <i class="btn btn-danger">
                                                        Del
                                                    </i>
                                                </a>
                                            </td>
                                        </tr>                                   
                                    }
                                
                                <button type="submit" id="confirmButton" style="display: none;">Невидимая кнопка</button>
                            </form>                          
                    </table>
                </div>
            </div>                        
            <button class="btn btn-primary" onclick="addRow();">Add translation</button>                        
        </div>
    </div>
</div>




@section Scripts {
    <script>
        function addRow() {
            var table = document.getElementById("tableId");
            var newRow = table.insertRow();

            var cell1 = newRow.insertCell(0);
            var cell2 = newRow.insertCell(1);
            var cell3 = newRow.insertCell(2);

            cell1.innerHTML = '<input style="width: 302px;" type="text" class="form-control" name="keys">';
            cell2.innerHTML = '<input style="width: 302px;" type="text" class="form-control" name="values">';
            cell3.innerHTML = '<a href="#" class="font-18 text-danger" onclick="deleteRow(this)"><i class="btn btn-danger">Del</i></a>';
        }
    </script>
    <script>
        function makeEditable(translateId) 
        {
            console.log("click");
            console.log(translateId);
            var cell = document.getElementById(translateId);
            console.log(cell);
            changeLabel(cell);
            var cell2 = document.getElementById(translateId+"2");
            changeLabel(cell2, translateId);
        }
             

        function changeLabel (cell, translateId)
        {
            console.log(cell);
            var text = document.getElementById("text");
            
            // Создаем элемент input и устанавливаем его значение равным тексту
            var input = document.createElement("input");
            input.value = text.textContent;
            input.className = 'form-control';
            if (translateId.slice(-1)=='2')
            {
                input.name = "keys";
            }
            else
            {
                input.name = "values";
            }
            
            console.log(text.textContent);

            // Заменяем текстовый элемент на поле ввода
            cell.replaceChild(input, text);

            // Фокусируемся на поле ввода
            input.focus();

            // Обработчик события потери фокуса, который превратит поле ввода обратно в текстовый элемент
            //input.addEventListener("blur", function () {
            //    text.textContent = input.value;
            //    cell.replaceChild(text, input);
           // });
         
    }
    </script>
}