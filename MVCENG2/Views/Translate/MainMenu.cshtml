@model List<Translate>
@await Html.PartialAsync("_ModalWindow")



<div class="container-fluid px-4">
    <h1 class="mt-4 mb-4">Переводы</h1>     
    <div class="card mb-4">      
        <div class="card-header  d-flex justify-content-between align-items-center">
            <div class="d-flex ml-auto">
                <input type="text" class="form-control-sm" id="searchInput" onkeyup="searchTable()" placeholder="Поиск">
                
            </div>
            <div class="d-flex mr-auto">  
                <button class="btn btn-success" onclick="addRow(1);">Добавить перевод</button>
                <form method="post" asp-action="ParseTranslationFile" enctype="multipart/form-data">         
                    <input style="display:none;" id="parseInputFile" type="file" class="btn btn-secondary" onchange="document.getElementById('submitParseFile').click();" accept="application/xml, text/xml" name="file" />
                    <button style="display:none;" type="submit" id="submitParseFile">Загрузить</button>
                    <button type="button" onclick="document.getElementById('parseInputFile').click();" class="btn btn-secondary">Спарсить файл переводов</button>
                </form>
                <button onclick="addOrEditInputs()" type="submit" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                    <font>Сохранить и отправить на стенды</font>
                </button>
            </div>                                                                                    
        </div>

        <div class="card-body">
            <div class="table-responsive">
                <table id="tableId" class="table">
                    <thead class="table-light">
                        <tr>
                            <th id="createdForm" scope="col">Английский вариант</th>
                            <th id="createdForm" scope="col">Русский вариант</th>
                            <th id="createdForm" scope="col">Действия</th>

                        </tr>                 
                    </thead>

                    <tbody class="table-group-divider">
                    <form method="post" asp-action="SaveChange">
                            
                            @foreach (var translate in Model)
                            {                                    
                                <tr>
                                    <td>
                                        <span>@Html.Raw(translate.EngVariant.Replace(" ", "&nbsp;"))</span>
                                    </td>                               
                                    <td id="@(translate.EngVariant)">
                                        <span id="@("Text "+translate.EngVariant)">@translate.RusVariant</span>
                                    </td>
                                    <td class="btn-group">
                                        <button onclick="makeEditable('@(translate.EngVariant)')" class="btn btn-primary fa-solid fa-pen"></button>                                                
                                        <button onclick="confirmAndDelete(this,'@(translate.EngVariant)')" class="btn btn-danger fa-solid fa-trash"></button>                                                                        
                                    </td>
                                </tr>                                   
                            }
                                
                        <button type="submit" id="confirmButton" style="display: none;">Невидимая кнопка</button>
                    </form> 
                    </tbody>
                </table>
            </div>
        </div>
    
        <button class="btn btn-success" onclick="addRow();">Добавить перевод</button>                        
    </div>
</div>





@section Scripts 
{



    <script>

        function searchTable() {
            // Получаем введенное значение из поля поиска
            var input = document.getElementById('searchInput').value.toLowerCase();

            // Получаем все элементы <tr> в таблице
            var rows = document.getElementsByTagName('tr');

            // Проходимся по каждому элементу <tr> и скрываем или показываем его в зависимости от значения поиска
            for (var i = 0; i < rows.length; i++) {
                var rowData = rows[i].getElementsByTagName('td');
                var display = false;
                if (rowData.length==0)
                    display = true;
                for (var j = 0; j < rowData.length; j++) {

                    if (rowData[j].innerHTML.toLowerCase().indexOf(input) > -1 || rowData[j].id == "createdForm") {
                        display = true; // показываем элемент, если найдено совпадение
                        break;
                    }
                }

                if (display) {
                    rows[i].style.display = ''; // показываем элемент
                } else {
                    rows[i].style.display = 'none'; // скрываем элемент
                }
            }
        }

        function addRow(rowIndex) {
            var table = document.getElementById("tableId");
            var newRow = table.insertRow(rowIndex);
        

            var cell1 = newRow.insertCell(0);
            var cell2 = newRow.insertCell(1);
            var cell3 = newRow.insertCell(2);

            cell1.id = "createdForm";
            cell2.id = "createdForm";

            cell1.innerHTML = '<input style="width: 302px;"  type="text" class="form-control-key" name="keys">';
            cell2.innerHTML = '<input style="width: 302px;"  type="text" class="form-control-value" name="values">';
            cell3.innerHTML = '<button onclick="deleteRow(this)" class="btn btn-danger fa-solid fa-trash"></button>';
        }

        function deleteRow(element) 
        {
            var row = element.parentNode.parentNode;
            row.parentNode.removeChild(row);
        }

        function confirmAndDelete(element,  translateEngVariant)
        {
            var confirmResult = confirm("Вы уверены, что хотите удалить перевод?");

            if (confirmResult)
            {
                deleteRow(element)

                var xhr = new XMLHttpRequest();
                xhr.open('DELETE', '/Translate/DeleteTranslate', true);
                xhr.setRequestHeader('Content-Type', 'application/json');
                xhr.send(JSON.stringify(translateEngVariant))
            }
            
        }

        function addOrEditInputs()
        {
            var inputData = {};

            var inputsKeys = document.querySelectorAll('.form-control-key');
            var inputsValues = document.querySelectorAll('.form-control-value');

            for (var i = 0; i < inputsKeys.length; i++) 
            {
                var key = inputsKeys[i].value;
                var value = inputsValues[i].value;
                inputData[key] = value;
            }

            var inputsUpdate = document.querySelectorAll('.form-control');
            
            for (var i = 1; i < inputsUpdate.length; i++) {
                var value = inputsUpdate[i].value;
                var id = inputsUpdate[i].id
                inputData[id] = value;          
            }
            
            var xhr = new XMLHttpRequest();
            xhr.open('POST', '/Translate/UpdateAndSave', true);
            xhr.setRequestHeader('Content-Type', 'application/json');
            xhr.onload = function () {
                FormationFileAndSendStands();
            };
            xhr.send(JSON.stringify(inputData))       
        }

        function makeEditable(translateKey) {
            var cell = document.getElementById(translateKey);
            changeLabel(cell, translateKey);

        }

        function changeLabel(cell, translateKey) {
            var text = document.getElementById("Text " + translateKey);

            var input = document.createElement("input");
            input.value = text.textContent;
            input.className = 'form-control';
            input.id = translateKey;

            cell.replaceChild(input, text);

            input.focus();        
    }

    </script>
}
